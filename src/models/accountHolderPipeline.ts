/**
 * v3.cashLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { AccountHolder, accountHolderSchema } from './accountHolder';
import { status3EnumSchema } from './status3Enum';

/** Describes a connection between payer and beneficiary. This is used to evaluate dispute and aml risks */
export interface AccountHolderPipeline {
  /** This will be used only if beneficiary_id is abscent */
  beneficiary?: AccountHolder;
  /** Unique Id of the associated beneficiary */
  beneficiaryId?: string;
  /** Unique name to identify the pipeline */
  name: string;
  /** Unique Id of the associated tenant */
  ownerId: string;
  /** This will be used only if payer_id is abscent */
  payer?: AccountHolder;
  /** Unique Id of the payer */
  payerId?: string;
  /** status of account holder pipeline, non active pipeliones will get blocked */
  status: Status3Enum;
}

export const accountHolderPipelineSchema: Schema<AccountHolderPipeline> = object(
  {
    beneficiary: ['beneficiary', optional(lazy(() => accountHolderSchema))],
    beneficiaryId: ['beneficiary_id', optional(string())],
    name: ['name', string()],
    ownerId: ['owner_id', string()],
    payer: ['payer', optional(lazy(() => accountHolderSchema))],
    payerId: ['payer_id', optional(string())],
    status: ['status', status3EnumSchema],
  }
);
