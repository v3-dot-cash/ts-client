/**
 * v3.cashLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { Address, addressSchema } from './address';
import { status2EnumSchema } from './status2Enum';

/** Legal details of an individual required to identify a transaction */
export interface Individual {
  /** Legal physical address */
  address?: Address;
  /** Date of Birth */
  dob?: string;
  /** Email Id of the individual */
  email?: string;
  /** First name of the individual */
  firstName?: string;
  /** Last name of the individual */
  lastName?: string;
  /** Phone of the individual */
  phone?: string;
  /** Last4 digits of ssn */
  ssnLast4?: string;
  /** status of account holder, non active consumers will get blocked */
  status?: Status2Enum;
  /** Tokenized ssn, this cannot be decrypted and has to be looked up in pci_datas */
  tokenizedSsn?: string;
}

export const individualSchema: Schema<Individual> = object({
  address: ['address', optional(lazy(() => addressSchema))],
  dob: ['dob', optional(string())],
  email: ['email', optional(string())],
  firstName: ['first_name', optional(string())],
  lastName: ['last_name', optional(string())],
  phone: ['phone', optional(string())],
  ssnLast4: ['ssn_last4', optional(string())],
  status: ['status', optional(status2EnumSchema)],
  tokenizedSsn: ['tokenized_ssn', optional(string())],
});
