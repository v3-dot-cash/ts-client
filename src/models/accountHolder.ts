/**
 * v3.cashLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { Address, addressSchema } from './address';
import { Company, companySchema } from './company';
import { Individual, individualSchema } from './individual';
import { typeEnumSchema } from './typeEnum';

/** Legal defination of an account holder */
export interface AccountHolder {
  /** Legal physical address */
  billing: Address;
  /** Legal details of a business entity */
  company?: Company;
  /** Unique name to identify the account holder */
  name: string;
  /** Id of the tenant of the account holder */
  ownerId: string;
  /** Legal details of an individual required to identify a transaction */
  primaryIndividual: Individual;
  /** status of account holder, non active consumers will get blocked */
  type: TypeEnum;
}

export const accountHolderSchema: Schema<AccountHolder> = object({
  billing: ['billing', lazy(() => addressSchema)],
  company: ['company', optional(lazy(() => companySchema))],
  name: ['name', string()],
  ownerId: ['owner_id', string()],
  primaryIndividual: ['primary_individual', lazy(() => individualSchema)],
  type: ['type', typeEnumSchema],
});
